{"ast":null,"code":"import axios from \"axios\";\nimport { logFrontend } from \"./logger\";\nconst BASE_URL = \"http://localhost:4000\";\nexport async function shortenUrl(data) {\n  try {\n    const response = await axios.post(`${BASE_URL}/shorturls`, data);\n    await logFrontend(\"info\", \"api\", `Short URL created: ${response.data.shortLink}`);\n    return response.data;\n  } catch (error) {\n    await logFrontend(\"error\", \"api\", `Shorten URL failed: ${error.message}`);\n    throw error;\n  }\n}\nexport async function getUrlStats(shortcode) {\n  try {\n    const response = await axios.get(`${BASE_URL}/shorturls/${shortcode}`);\n    await logFrontend(\"info\", \"api\", `Fetched stats for shortcode: ${shortcode}`);\n    return response.data;\n  } catch (error) {\n    await logFrontend(\"error\", \"api\", `Get URL stats failed: ${error.message}`);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","logFrontend","BASE_URL","shortenUrl","data","response","post","shortLink","error","message","getUrlStats","shortcode","get"],"sources":["C:/Users/Sushil Kumar Verma/Desktop/12222221/frontend/src/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { logFrontend } from \"./logger\";\r\n\r\nconst BASE_URL = \"http://localhost:4000\";\r\n\r\nexport interface ShortenUrlRequest {\r\n  url: string;\r\n  validity?: number;  // minutes\r\n  shortcode?: string;\r\n}\r\n\r\nexport interface ShortenUrlResponse {\r\n  shortLink: string;\r\n  expiry: string;\r\n}\r\n\r\nexport async function shortenUrl(data: ShortenUrlRequest): Promise<ShortenUrlResponse> {\r\n  try {\r\n    const response = await axios.post<ShortenUrlResponse>(`${BASE_URL}/shorturls`, data);\r\n    await logFrontend(\"info\", \"api\", `Short URL created: ${response.data.shortLink}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    await logFrontend(\"error\", \"api\", `Shorten URL failed: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport interface UrlStats {\r\n  originalUrl: string;\r\n  createdAt: string;\r\n  expiry: string;\r\n  totalClicks: number;\r\n  clicks: Array<{ timestamp: string; referrer: string | null; location: string }>;\r\n}\r\n\r\nexport async function getUrlStats(shortcode: string): Promise<UrlStats> {\r\n  try {\r\n    const response = await axios.get<UrlStats>(`${BASE_URL}/shorturls/${shortcode}`);\r\n    await logFrontend(\"info\", \"api\", `Fetched stats for shortcode: ${shortcode}`);\r\n    return response.data;\r\n  } catch (error: any) {\r\n    await logFrontend(\"error\", \"api\", `Get URL stats failed: ${error.message}`);\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,UAAU;AAEtC,MAAMC,QAAQ,GAAG,uBAAuB;AAaxC,OAAO,eAAeC,UAAUA,CAACC,IAAuB,EAA+B;EACrF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAqB,GAAGJ,QAAQ,YAAY,EAAEE,IAAI,CAAC;IACpF,MAAMH,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,sBAAsBI,QAAQ,CAACD,IAAI,CAACG,SAAS,EAAE,CAAC;IACjF,OAAOF,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAU,EAAE;IACnB,MAAMP,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,uBAAuBO,KAAK,CAACC,OAAO,EAAE,CAAC;IACzE,MAAMD,KAAK;EACb;AACF;AAUA,OAAO,eAAeE,WAAWA,CAACC,SAAiB,EAAqB;EACtE,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAG,CAAW,GAAGV,QAAQ,cAAcS,SAAS,EAAE,CAAC;IAChF,MAAMV,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,gCAAgCU,SAAS,EAAE,CAAC;IAC7E,OAAON,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAU,EAAE;IACnB,MAAMP,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,yBAAyBO,KAAK,CAACC,OAAO,EAAE,CAAC;IAC3E,MAAMD,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}