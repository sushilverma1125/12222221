{"ast":null,"code":"import fetch from \"node-fetch\";\nconst LOG_API_URL = \"http://20.244.56.144/evaluation-service/logs\";\nconst API_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiYXVkIjoiaHR0cDovLzIwLjI0NC41Ni4xNDQvZXZhbHVhdGlvbi1zZXJ2aWNlIiwiZW1haWwiOiJzdXNoaWx2ZXJtYTExMjVAZ21haWwuY29tIiwiZXhwIjoxNzUyNDcyMTYwLCJpYXQiOjE3NTI0NzEyNjAsImlzcyI6IkFmZm9yZCBNZWRpY2FsIFRlY2hub2xvZ2llcyBQcml2YXRlIExpbWl0ZWQiLCJqdGkiOiI4YzAyNDQxMS1hMzRjLTRkYTEtYjdhNC1lYjYwNDUxODBjZDMiLCJsb2NhbGUiOiJlbi1JTiIsIm5hbWUiOiJzdXNoaWwga3VtYXIgdmVybWEiLCJzdWIiOiI4ZmU5YWZhYi1lMDk2LTQ2OGYtYjlkMC1hM2FmOGY1N2UzZGUifSwiZW1haWwiOiJzdXNoaWx2ZXJtYTExMjVAZ21haWwuY29tIiwibmFtZSI6InN1c2hpbCBrdW1hciB2ZXJtYSIsInJvbGxObyI6IjEyMjIyMjIxIiwiYWNjZXNzQ29kZSI6IkNaeXBRSyIsImNsaWVudElEIjoiOGZlOWFmYWItZTA5Ni00NjhmLWI5ZDAtYTNhZjhmNTdlM2RlIiwiY2xpZW50U2VjcmV0IjoidFFWdUdramRCU0JCVHNHRCJ9.5HnaeCQUq8mzjy5Cfiz01wM0sRaA2OUKjXl_nu_voiM\";\nconst validStacks = [\"backend\", \"frontend\"];\nconst validLevels = [\"debug\", \"info\", \"warn\", \"error\", \"fatal\"];\nconst backendPackages = [\"cache\", \"controller\", \"cron_job\", \"domain\", \"handler\", \"repository\", \"route\", \"service\"];\nconst frontendPackages = [\"api\", \"component\", \"hook\", \"page\", \"state\", \"style\"];\nconst bothPackages = [\"auth\", \"config\", \"middleware\", \"utils\"];\nexport async function Log(stack, level, pkg, message) {\n  // Normalize inputs just in case\n  stack = stack.trim().toLowerCase();\n  level = level.trim().toLowerCase();\n  pkg = pkg.trim().toLowerCase();\n  if (!validStacks.includes(stack)) {\n    throw new Error(`Invalid stack: ${stack}`);\n  }\n  if (!validLevels.includes(level)) {\n    throw new Error(`Invalid level: ${level}`);\n  }\n  if (stack === \"backend\") {\n    // if (!backendPackages.includes(pkg) && !bothPackages.includes(pkg)) {\n    //   throw new Error(`Invalid package for backend: ${pkg}`);\n    // }\n  } else if (stack === \"frontend\") {\n    // if (!frontendPackages.includes(pkg) && !bothPackages.includes(pkg)) {\n    //   throw new Error(`Invalid package for frontend: ${pkg}`);\n    // }\n  }\n  const payload = {\n    stack,\n    level,\n    package: pkg,\n    message\n  };\n  try {\n    const res = await fetch(LOG_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${API_TOKEN}`\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!res.ok) {\n      console.error(`Failed to log message: ${res.status} ${res.statusText}`);\n      return;\n    }\n    const data = await res.json();\n    // Use correct casing as per API response (check if it's logID or logId)\n    // console.log(`Log created with ID: ${data.logID ?? data.logId ?? \"unknown\"}`);\n  } catch (error) {\n    console.error(\"Error sending log:\", error);\n  }\n}\n_c = Log;\nvar _c;\n$RefreshReg$(_c, \"Log\");","map":{"version":3,"names":["fetch","LOG_API_URL","API_TOKEN","validStacks","validLevels","backendPackages","frontendPackages","bothPackages","Log","stack","level","pkg","message","trim","toLowerCase","includes","Error","payload","package","res","method","headers","Authorization","body","JSON","stringify","ok","console","error","status","statusText","data","json","_c","$RefreshReg$"],"sources":["C:/Users/Sushil Kumar Verma/Desktop/12222221/frontend/src/loggingMiddleWare/index.ts"],"sourcesContent":["import fetch from \"node-fetch\";\r\n\r\nconst LOG_API_URL = \"http://20.244.56.144/evaluation-service/logs\";\r\n\r\nconst API_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJNYXBDbGFpbXMiOnsiYXVkIjoiaHR0cDovLzIwLjI0NC41Ni4xNDQvZXZhbHVhdGlvbi1zZXJ2aWNlIiwiZW1haWwiOiJzdXNoaWx2ZXJtYTExMjVAZ21haWwuY29tIiwiZXhwIjoxNzUyNDcyMTYwLCJpYXQiOjE3NTI0NzEyNjAsImlzcyI6IkFmZm9yZCBNZWRpY2FsIFRlY2hub2xvZ2llcyBQcml2YXRlIExpbWl0ZWQiLCJqdGkiOiI4YzAyNDQxMS1hMzRjLTRkYTEtYjdhNC1lYjYwNDUxODBjZDMiLCJsb2NhbGUiOiJlbi1JTiIsIm5hbWUiOiJzdXNoaWwga3VtYXIgdmVybWEiLCJzdWIiOiI4ZmU5YWZhYi1lMDk2LTQ2OGYtYjlkMC1hM2FmOGY1N2UzZGUifSwiZW1haWwiOiJzdXNoaWx2ZXJtYTExMjVAZ21haWwuY29tIiwibmFtZSI6InN1c2hpbCBrdW1hciB2ZXJtYSIsInJvbGxObyI6IjEyMjIyMjIxIiwiYWNjZXNzQ29kZSI6IkNaeXBRSyIsImNsaWVudElEIjoiOGZlOWFmYWItZTA5Ni00NjhmLWI5ZDAtYTNhZjhmNTdlM2RlIiwiY2xpZW50U2VjcmV0IjoidFFWdUdramRCU0JCVHNHRCJ9.5HnaeCQUq8mzjy5Cfiz01wM0sRaA2OUKjXl_nu_voiM\";\r\n\r\nconst validStacks = [\"backend\", \"frontend\"] as const;\r\nconst validLevels = [\"debug\", \"info\", \"warn\", \"error\", \"fatal\"] as const;\r\nconst backendPackages = [\"cache\", \"controller\", \"cron_job\", \"domain\", \"handler\", \"repository\", \"route\", \"service\"] as const;\r\nconst frontendPackages = [\"api\", \"component\", \"hook\", \"page\", \"state\", \"style\"] as const;\r\nconst bothPackages = [\"auth\", \"config\", \"middleware\", \"utils\"] as const;\r\n\r\ntype Stack = typeof validStacks[number];\r\ntype Level = typeof validLevels[number];\r\ntype Package = typeof backendPackages[number] | typeof frontendPackages[number] | typeof bothPackages[number];\r\n\r\ninterface LogParams {\r\n  stack: Stack;\r\n  level: Level;\r\n  package: Package;\r\n  message: string;\r\n}\r\n\r\nexport async function Log(stack: Stack, level: Level, pkg: Package, message: string): Promise<void> {\r\n  // Normalize inputs just in case\r\n  stack = stack.trim().toLowerCase() as Stack;\r\n  level = level.trim().toLowerCase() as Level;\r\n  pkg = pkg.trim().toLowerCase() as Package;\r\n\r\n  if (!validStacks.includes(stack)) {\r\n    throw new Error(`Invalid stack: ${stack}`);\r\n  }\r\n\r\n  if (!validLevels.includes(level)) {\r\n    throw new Error(`Invalid level: ${level}`);\r\n  }\r\n\r\n  if (stack === \"backend\") {\r\n    // if (!backendPackages.includes(pkg) && !bothPackages.includes(pkg)) {\r\n    //   throw new Error(`Invalid package for backend: ${pkg}`);\r\n    // }\r\n  } else if (stack === \"frontend\") {\r\n    // if (!frontendPackages.includes(pkg) && !bothPackages.includes(pkg)) {\r\n    //   throw new Error(`Invalid package for frontend: ${pkg}`);\r\n    // }\r\n  }\r\n\r\n  const payload: LogParams = { stack, level, package: pkg, message };\r\n\r\n  try {\r\n    const res = await fetch(LOG_API_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${API_TOKEN}`,\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (!res.ok) {\r\n      console.error(`Failed to log message: ${res.status} ${res.statusText}`);\r\n      return;\r\n    }\r\n\r\n    const data = await res.json();\r\n    // Use correct casing as per API response (check if it's logID or logId)\r\n    // console.log(`Log created with ID: ${data.logID ?? data.logId ?? \"unknown\"}`);\r\n  } catch (error) {\r\n    console.error(\"Error sending log:\", error);\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,YAAY;AAE9B,MAAMC,WAAW,GAAG,8CAA8C;AAElE,MAAMC,SAAS,GAAG,2vBAA2vB;AAE7wB,MAAMC,WAAW,GAAG,CAAC,SAAS,EAAE,UAAU,CAAU;AACpD,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAU;AACxE,MAAMC,eAAe,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,CAAU;AAC3H,MAAMC,gBAAgB,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAU;AACxF,MAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAU;AAavE,OAAO,eAAeC,GAAGA,CAACC,KAAY,EAAEC,KAAY,EAAEC,GAAY,EAAEC,OAAe,EAAiB;EAClG;EACAH,KAAK,GAAGA,KAAK,CAACI,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAU;EAC3CJ,KAAK,GAAGA,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAU;EAC3CH,GAAG,GAAGA,GAAG,CAACE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAY;EAEzC,IAAI,CAACX,WAAW,CAACY,QAAQ,CAACN,KAAK,CAAC,EAAE;IAChC,MAAM,IAAIO,KAAK,CAAC,kBAAkBP,KAAK,EAAE,CAAC;EAC5C;EAEA,IAAI,CAACL,WAAW,CAACW,QAAQ,CAACL,KAAK,CAAC,EAAE;IAChC,MAAM,IAAIM,KAAK,CAAC,kBAAkBN,KAAK,EAAE,CAAC;EAC5C;EAEA,IAAID,KAAK,KAAK,SAAS,EAAE;IACvB;IACA;IACA;EAAA,CACD,MAAM,IAAIA,KAAK,KAAK,UAAU,EAAE;IAC/B;IACA;IACA;EAAA;EAGF,MAAMQ,OAAkB,GAAG;IAAER,KAAK;IAAEC,KAAK;IAAEQ,OAAO,EAAEP,GAAG;IAAEC;EAAQ,CAAC;EAElE,IAAI;IACF,MAAMO,GAAG,GAAG,MAAMnB,KAAK,CAACC,WAAW,EAAE;MACnCmB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUpB,SAAS;MACpC,CAAC;MACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,OAAO;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACE,GAAG,CAACO,EAAE,EAAE;MACXC,OAAO,CAACC,KAAK,CAAC,0BAA0BT,GAAG,CAACU,MAAM,IAAIV,GAAG,CAACW,UAAU,EAAE,CAAC;MACvE;IACF;IAEA,MAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAI,CAAC,CAAC;IAC7B;IACA;EACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC5C;AACF;AAACK,EAAA,GA/CqBzB,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}